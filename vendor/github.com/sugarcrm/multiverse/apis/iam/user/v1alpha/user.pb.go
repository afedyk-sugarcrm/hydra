// Code generated by protoc-gen-go. DO NOT EDIT.
// source: apis/iam/user/v1alpha/user.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	apis/iam/user/v1alpha/user.proto

It has these top-level messages:
	CreateUserRequest
	UpdateUserRequest
	GetUserRequest
	DeleteUserRequest
	ListUsersRequest
	ListUsersResponse
	SetPasswordRequest
	User
	Attributes
	Address
	CustomAttribute
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User_Status int32

const (
	User_ACTIVE   User_Status = 0
	User_INACTIVE User_Status = 1
)

var User_Status_name = map[int32]string{
	0: "ACTIVE",
	1: "INACTIVE",
}
var User_Status_value = map[string]int32{
	"ACTIVE":   0,
	"INACTIVE": 1,
}

func (x User_Status) String() string {
	return proto.EnumName(User_Status_name, int32(x))
}
func (User_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type CreateUserRequest struct {
	Tenant string `protobuf:"bytes,1,opt,name=tenant" json:"tenant,omitempty"`
	User   *User  `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateUserRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *CreateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateUserRequest struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *UpdateUserRequest) Reset()                    { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()               {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UpdateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type GetUserRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteUserRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteUserRequest) Reset()                    { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()               {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListUsersRequest struct {
	Tenant    string `protobuf:"bytes,1,opt,name=tenant" json:"tenant,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListUsersRequest) Reset()                    { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()               {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListUsersRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ListUsersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListUsersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListUsersResponse struct {
	Users         []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	NextPageToken string  `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListUsersResponse) Reset()                    { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()               {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ListUsersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type SetPasswordRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *SetPasswordRequest) Reset()                    { *m = SetPasswordRequest{} }
func (m *SetPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*SetPasswordRequest) ProtoMessage()               {}
func (*SetPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SetPasswordRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type User struct {
	Name             string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	ModifyTime       *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=modify_time,json=modifyTime" json:"modify_time,omitempty"`
	Attributes       *Attributes                 `protobuf:"bytes,4,opt,name=attributes" json:"attributes,omitempty"`
	CustomAttributes []*CustomAttribute          `protobuf:"bytes,5,rep,name=custom_attributes,json=customAttributes" json:"custom_attributes,omitempty"`
	Status           User_Status                 `protobuf:"varint,6,opt,name=status,enum=sugarcrm.apis.iam.user.v1alpha.User_Status" json:"status,omitempty"`
	ProviderIds      map[string]string           `protobuf:"bytes,7,rep,name=provider_ids,json=providerIds" json:"provider_ids,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *User) GetModifyTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ModifyTime
	}
	return nil
}

func (m *User) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *User) GetCustomAttributes() []*CustomAttribute {
	if m != nil {
		return m.CustomAttributes
	}
	return nil
}

func (m *User) GetStatus() User_Status {
	if m != nil {
		return m.Status
	}
	return User_ACTIVE
}

func (m *User) GetProviderIds() map[string]string {
	if m != nil {
		return m.ProviderIds
	}
	return nil
}

type Attributes struct {
	GivenName   string   `protobuf:"bytes,1,opt,name=given_name,json=givenName" json:"given_name,omitempty"`
	FamilyName  string   `protobuf:"bytes,2,opt,name=family_name,json=familyName" json:"family_name,omitempty"`
	MiddleName  string   `protobuf:"bytes,3,opt,name=middle_name,json=middleName" json:"middle_name,omitempty"`
	Nickname    string   `protobuf:"bytes,4,opt,name=nickname" json:"nickname,omitempty"`
	Address     *Address `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	Email       string   `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	PhoneNumber string   `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
}

func (m *Attributes) Reset()                    { *m = Attributes{} }
func (m *Attributes) String() string            { return proto.CompactTextString(m) }
func (*Attributes) ProtoMessage()               {}
func (*Attributes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Attributes) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *Attributes) GetFamilyName() string {
	if m != nil {
		return m.FamilyName
	}
	return ""
}

func (m *Attributes) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *Attributes) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *Attributes) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Attributes) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Attributes) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

type Address struct {
	StreetAddress string `protobuf:"bytes,1,opt,name=street_address,json=streetAddress" json:"street_address,omitempty"`
	Locality      string `protobuf:"bytes,2,opt,name=locality" json:"locality,omitempty"`
	Region        string `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	PostalCode    string `protobuf:"bytes,4,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	Country       string `protobuf:"bytes,5,opt,name=country" json:"country,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Address) GetStreetAddress() string {
	if m != nil {
		return m.StreetAddress
	}
	return ""
}

func (m *Address) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *Address) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type CustomAttribute struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *CustomAttribute) Reset()                    { *m = CustomAttribute{} }
func (m *CustomAttribute) String() string            { return proto.CompactTextString(m) }
func (*CustomAttribute) ProtoMessage()               {}
func (*CustomAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CustomAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomAttribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateUserRequest)(nil), "sugarcrm.apis.iam.user.v1alpha.CreateUserRequest")
	proto.RegisterType((*UpdateUserRequest)(nil), "sugarcrm.apis.iam.user.v1alpha.UpdateUserRequest")
	proto.RegisterType((*GetUserRequest)(nil), "sugarcrm.apis.iam.user.v1alpha.GetUserRequest")
	proto.RegisterType((*DeleteUserRequest)(nil), "sugarcrm.apis.iam.user.v1alpha.DeleteUserRequest")
	proto.RegisterType((*ListUsersRequest)(nil), "sugarcrm.apis.iam.user.v1alpha.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "sugarcrm.apis.iam.user.v1alpha.ListUsersResponse")
	proto.RegisterType((*SetPasswordRequest)(nil), "sugarcrm.apis.iam.user.v1alpha.SetPasswordRequest")
	proto.RegisterType((*User)(nil), "sugarcrm.apis.iam.user.v1alpha.User")
	proto.RegisterType((*Attributes)(nil), "sugarcrm.apis.iam.user.v1alpha.Attributes")
	proto.RegisterType((*Address)(nil), "sugarcrm.apis.iam.user.v1alpha.Address")
	proto.RegisterType((*CustomAttribute)(nil), "sugarcrm.apis.iam.user.v1alpha.CustomAttribute")
	proto.RegisterEnum("sugarcrm.apis.iam.user.v1alpha.User_Status", User_Status_name, User_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserAPI service

type UserAPIClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
	SetPassword(ctx context.Context, in *SetPasswordRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type userAPIClient struct {
	cc *grpc.ClientConn
}

func NewUserAPIClient(cc *grpc.ClientConn) UserAPIClient {
	return &userAPIClient{cc}
}

func (c *userAPIClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/sugarcrm.apis.iam.user.v1alpha.UserAPI/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAPIClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/sugarcrm.apis.iam.user.v1alpha.UserAPI/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAPIClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/sugarcrm.apis.iam.user.v1alpha.UserAPI/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAPIClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/sugarcrm.apis.iam.user.v1alpha.UserAPI/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAPIClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := grpc.Invoke(ctx, "/sugarcrm.apis.iam.user.v1alpha.UserAPI/ListUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAPIClient) SetPassword(ctx context.Context, in *SetPasswordRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/sugarcrm.apis.iam.user.v1alpha.UserAPI/SetPassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserAPI service

type UserAPIServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*User, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*User, error)
	GetUser(context.Context, *GetUserRequest) (*User, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*google_protobuf.Empty, error)
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
	SetPassword(context.Context, *SetPasswordRequest) (*google_protobuf.Empty, error)
}

func RegisterUserAPIServer(s *grpc.Server, srv UserAPIServer) {
	s.RegisterService(&_UserAPI_serviceDesc, srv)
}

func _UserAPI_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sugarcrm.apis.iam.user.v1alpha.UserAPI/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAPI_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sugarcrm.apis.iam.user.v1alpha.UserAPI/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAPI_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sugarcrm.apis.iam.user.v1alpha.UserAPI/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAPI_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sugarcrm.apis.iam.user.v1alpha.UserAPI/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAPI_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sugarcrm.apis.iam.user.v1alpha.UserAPI/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAPI_SetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).SetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sugarcrm.apis.iam.user.v1alpha.UserAPI/SetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).SetPassword(ctx, req.(*SetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sugarcrm.apis.iam.user.v1alpha.UserAPI",
	HandlerType: (*UserAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _UserAPI_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserAPI_UpdateUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserAPI_GetUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserAPI_DeleteUser_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _UserAPI_ListUsers_Handler,
		},
		{
			MethodName: "SetPassword",
			Handler:    _UserAPI_SetPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apis/iam/user/v1alpha/user.proto",
}

func init() { proto.RegisterFile("apis/iam/user/v1alpha/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 890 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xff, 0x6e, 0xdb, 0x36,
	0x10, 0x8e, 0x12, 0xc7, 0x8e, 0xcf, 0x69, 0x6a, 0x13, 0x43, 0x21, 0xa8, 0xe8, 0xea, 0x09, 0xdd,
	0x1a, 0x6c, 0x80, 0xb4, 0x64, 0x18, 0xd0, 0x35, 0xc0, 0x80, 0xcc, 0x0d, 0x86, 0x0c, 0x5b, 0x10,
	0x28, 0xe9, 0xb0, 0x5f, 0x80, 0x40, 0x4b, 0x17, 0x87, 0x88, 0x24, 0x6a, 0x22, 0xe5, 0xce, 0xfd,
	0x7f, 0xcf, 0xb1, 0x67, 0xd9, 0xeb, 0xec, 0x29, 0x06, 0x92, 0x92, 0xe3, 0x38, 0x6e, 0xe5, 0xfe,
	0xe7, 0x3b, 0x7e, 0xdf, 0x77, 0xd4, 0xf1, 0x23, 0xcf, 0x30, 0xa4, 0x39, 0x13, 0x3e, 0xa3, 0xa9,
	0x5f, 0x0a, 0x2c, 0xfc, 0xe9, 0x01, 0x4d, 0xf2, 0x6b, 0xaa, 0x03, 0x2f, 0x2f, 0xb8, 0xe4, 0xe4,
	0x63, 0x51, 0x4e, 0x68, 0x11, 0x15, 0xa9, 0xa7, 0xa0, 0x1e, 0xa3, 0xa9, 0xa7, 0x57, 0x2b, 0xa8,
	0xf3, 0x78, 0xc2, 0xf9, 0x24, 0x41, 0x5f, 0xa3, 0xc7, 0xe5, 0x95, 0x8f, 0x69, 0x2e, 0x67, 0x86,
	0xec, 0x3c, 0x5d, 0x5e, 0x94, 0x2c, 0x45, 0x21, 0x69, 0x9a, 0x1b, 0x80, 0x8b, 0x30, 0x18, 0x15,
	0x48, 0x25, 0xbe, 0x16, 0x58, 0x04, 0xf8, 0x67, 0x89, 0x42, 0x92, 0x47, 0xd0, 0x96, 0x98, 0xd1,
	0x4c, 0xda, 0xd6, 0xd0, 0xda, 0xef, 0x06, 0x55, 0x44, 0x5e, 0x40, 0x4b, 0x95, 0xb6, 0x37, 0x87,
	0xd6, 0x7e, 0xef, 0xf0, 0x99, 0xf7, 0xfe, 0x9d, 0x79, 0x5a, 0x52, 0x33, 0xdc, 0x9f, 0x60, 0xf0,
	0x3a, 0x8f, 0x97, 0xca, 0xd4, 0x72, 0xd6, 0x07, 0xcb, 0x3d, 0x83, 0xbd, 0xef, 0x51, 0x2e, 0x6a,
	0x11, 0x68, 0x65, 0x34, 0xc5, 0x6a, 0xc3, 0xfa, 0xb7, 0xfb, 0x1c, 0x06, 0xaf, 0x30, 0xc1, 0xbb,
	0x45, 0x57, 0x01, 0xaf, 0xa0, 0xff, 0x23, 0x13, 0x5a, 0x4f, 0x34, 0xf5, 0xe0, 0x31, 0x74, 0x73,
	0x3a, 0xc1, 0x50, 0xb0, 0xb7, 0xa8, 0x1b, 0xb1, 0x1d, 0xec, 0xa8, 0xc4, 0x05, 0x7b, 0x8b, 0xe4,
	0x09, 0x80, 0x5e, 0x94, 0xfc, 0x06, 0x33, 0x7b, 0x4b, 0x13, 0x35, 0xfc, 0x52, 0x25, 0xdc, 0x37,
	0x30, 0x58, 0xa8, 0x23, 0x72, 0x9e, 0x09, 0x24, 0x2f, 0x61, 0x5b, 0x7d, 0x93, 0xb0, 0xad, 0xe1,
	0xd6, 0xda, 0x6d, 0x30, 0x14, 0xf2, 0x19, 0x3c, 0xcc, 0xf0, 0x2f, 0x19, 0x2e, 0x14, 0xdd, 0xd4,
	0x45, 0x1f, 0xa8, 0xf4, 0xf9, 0xbc, 0xf0, 0x2b, 0x20, 0x17, 0x28, 0xcf, 0xa9, 0x10, 0x6f, 0x78,
	0x11, 0xbf, 0xa7, 0x15, 0xc4, 0x81, 0x9d, 0xbc, 0x82, 0x55, 0x52, 0xf3, 0xd8, 0xfd, 0xb7, 0x05,
	0x2d, 0x55, 0x7d, 0x25, 0xf1, 0x08, 0x7a, 0x91, 0x36, 0x52, 0xa8, 0x2c, 0x56, 0x59, 0xc4, 0xf1,
	0x8c, 0xff, 0xbc, 0xda, 0x7f, 0xde, 0x65, 0xed, 0xbf, 0x00, 0x0c, 0x5c, 0x25, 0x14, 0x39, 0xe5,
	0x31, 0xbb, 0x9a, 0x19, 0xf2, 0x56, 0x33, 0xd9, 0xc0, 0x35, 0xf9, 0x07, 0x00, 0x2a, 0x65, 0xc1,
	0xc6, 0xa5, 0x44, 0x61, 0xb7, 0x34, 0xf7, 0xf3, 0xa6, 0x2e, 0x1e, 0xcf, 0x19, 0xc1, 0x02, 0x9b,
	0xfc, 0x01, 0x83, 0xa8, 0x14, 0x92, 0xa7, 0xe1, 0x82, 0xe4, 0xb6, 0x3e, 0x18, 0xbf, 0x49, 0x72,
	0xa4, 0x89, 0x73, 0xe1, 0xa0, 0x1f, 0xdd, 0x4d, 0x08, 0x32, 0x82, 0xb6, 0x90, 0x54, 0x96, 0xc2,
	0x6e, 0x0f, 0xad, 0xfd, 0xbd, 0xc3, 0x2f, 0xd6, 0x39, 0x6b, 0xef, 0x42, 0x53, 0x82, 0x8a, 0x4a,
	0x7e, 0x81, 0xdd, 0xbc, 0xe0, 0x53, 0x16, 0x63, 0x11, 0xb2, 0x58, 0xd8, 0x1d, 0xbd, 0xbb, 0xaf,
	0xd7, 0x92, 0x3a, 0xaf, 0x88, 0xa7, 0xb1, 0x38, 0xc9, 0x64, 0x31, 0x0b, 0x7a, 0xf9, 0x6d, 0xc6,
	0xf9, 0x16, 0xfa, 0xcb, 0x00, 0xd2, 0x87, 0xad, 0x1b, 0x9c, 0x55, 0x27, 0xad, 0x7e, 0x92, 0x8f,
	0x60, 0x7b, 0x4a, 0x93, 0x12, 0x2b, 0x7b, 0x98, 0xe0, 0xe5, 0xe6, 0x0b, 0xcb, 0x75, 0xa1, 0x6d,
	0xf6, 0x4a, 0x00, 0xda, 0xc7, 0xa3, 0xcb, 0xd3, 0x9f, 0x4f, 0xfa, 0x1b, 0x64, 0x17, 0x76, 0x4e,
	0xcf, 0xaa, 0xc8, 0x72, 0xff, 0xde, 0x04, 0x58, 0xe8, 0xc8, 0x13, 0x80, 0x09, 0x9b, 0x62, 0x16,
	0x2e, 0xf8, 0xa9, 0xab, 0x33, 0x67, 0xca, 0x54, 0x4f, 0xa1, 0x77, 0x45, 0x53, 0x96, 0xcc, 0xcc,
	0xba, 0xa9, 0x08, 0x26, 0x55, 0x03, 0x52, 0x16, 0xc7, 0x09, 0x1a, 0x80, 0xb9, 0x71, 0x60, 0x52,
	0x67, 0x95, 0x9f, 0x33, 0x16, 0xdd, 0xe8, 0xd5, 0x96, 0xf1, 0x73, 0x1d, 0x93, 0x63, 0xe8, 0xd0,
	0x38, 0x2e, 0x50, 0xa8, 0x23, 0x56, 0xae, 0x79, 0xde, 0xe8, 0x1a, 0x03, 0x0f, 0x6a, 0x9e, 0x6a,
	0x06, 0xa6, 0x94, 0x25, 0xfa, 0x40, 0xbb, 0x81, 0x09, 0xc8, 0x27, 0xb0, 0x9b, 0x5f, 0xf3, 0x0c,
	0xc3, 0xac, 0x4c, 0xc7, 0x58, 0xd8, 0x1d, 0xbd, 0xd8, 0xd3, 0xb9, 0x33, 0x9d, 0x72, 0xff, 0xb1,
	0xa0, 0x53, 0xa9, 0x91, 0x4f, 0x61, 0x4f, 0xc8, 0x02, 0x51, 0x86, 0xf5, 0x76, 0x4c, 0x23, 0x1e,
	0x98, 0x6c, 0x0d, 0x73, 0x60, 0x27, 0xe1, 0x11, 0x4d, 0x98, 0x9c, 0xd5, 0x57, 0xb3, 0x8e, 0xd5,
	0x6b, 0x55, 0xe0, 0x84, 0xf1, 0xfa, 0xd1, 0xa9, 0x22, 0xd5, 0x9f, 0x9c, 0x0b, 0x49, 0x93, 0x30,
	0xe2, 0x71, 0xdd, 0x01, 0x30, 0xa9, 0x11, 0x8f, 0x91, 0xd8, 0xd0, 0x89, 0x78, 0xa9, 0x8e, 0x5a,
	0xf7, 0xa0, 0x1b, 0xd4, 0xa1, 0x7b, 0x04, 0x0f, 0x97, 0x1c, 0xbd, 0xf2, 0xde, 0xaf, 0xb4, 0xc3,
	0xe1, 0x7f, 0x2d, 0xe8, 0x28, 0xc7, 0x1d, 0x9f, 0x9f, 0x92, 0x09, 0xc0, 0xed, 0x88, 0x21, 0x07,
	0x8d, 0xd7, 0x68, 0x79, 0x1c, 0x39, 0x6b, 0x3d, 0x89, 0xee, 0x86, 0x2a, 0x74, 0x3b, 0x64, 0x9a,
	0x0b, 0xdd, 0x1b, 0x48, 0x6b, 0x17, 0xa2, 0xd0, 0xa9, 0xc6, 0x0f, 0xf1, 0x9a, 0x28, 0x77, 0xe7,
	0xd4, 0xda, 0x25, 0x7e, 0x05, 0xb8, 0x9d, 0x5d, 0xcd, 0xdf, 0x72, 0x6f, 0xce, 0x39, 0x8f, 0xee,
	0xbd, 0x9e, 0x27, 0xea, 0x7f, 0x81, 0xbb, 0x41, 0x0a, 0xe8, 0xce, 0xa7, 0x10, 0xf9, 0xb2, 0x49,
	0x79, 0x79, 0x30, 0x3a, 0x07, 0x1f, 0xc0, 0x30, 0x23, 0xce, 0xdd, 0x20, 0xbf, 0x43, 0x6f, 0x61,
	0x00, 0x91, 0xc3, 0x26, 0x8d, 0xfb, 0xd3, 0xea, 0xdd, 0x1f, 0xf4, 0xdd, 0xd1, 0x6f, 0xdf, 0x4c,
	0x98, 0xbc, 0x2e, 0xc7, 0x5e, 0xc4, 0x53, 0xbf, 0x56, 0xf6, 0xd3, 0x32, 0x91, 0x6c, 0x8a, 0x85,
	0x40, 0x7f, 0xe5, 0x9f, 0xac, 0x23, 0x15, 0x8c, 0xdb, 0x5a, 0xee, 0xab, 0xff, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xba, 0xa4, 0x92, 0xde, 0x89, 0x09, 0x00, 0x00,
}
